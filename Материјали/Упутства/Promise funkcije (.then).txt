Wrap your Promise inside a function or it will start to do its job right away. Plus, you can pass parameters to the function:

var someFunction = function(username, password) {
  return new Promise(function(resolve, reject) {
    /*stuff using username, password*/
    if ( /* everything turned out fine */ ) {
      resolve("Stuff worked!");
    } else {
      reject(Error("It broke"));
    }
  });
}
Then, use it:
someModule.someFunction(username, password).then(function(uid) {
  /* stuff */
})
 
ES6:
const someFunction = (username, password) => {
  return new Promise((resolve, reject) => {
    /*stuff using username, password*/

    if ( /* everything turned out fine */ ) {
      resolve("Stuff worked!");
    } else {
      reject(Error("It broke"));
    }
  });
};
Use:
someModule.someFunction(username, password).then(uid => {
  /* stuff */
});